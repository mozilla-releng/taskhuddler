[tox]
envlist = docker
skipsdist = True

[testenv:docker]
whitelist_externals=docker
deps =
usedevelop = false
depends =
skip_install = true
ignore_errors = true
commands =
    docker build --build-arg PYTHON_VERSION=3.8 -t taskhuddler-{envname}-py38-test -f Dockerfile.test .
    docker run --rm -v {toxinidir}:/app -v taskhuddler-{envname}-py38-tox:/app/.tox taskhuddler-{envname}-py38-test check,py38
    docker build --build-arg PYTHON_VERSION=3.7 -t taskhuddler-{envname}-py37-test -f Dockerfile.test .
    docker run --rm -v {toxinidir}:/app -v taskhuddler-{envname}-py37-tox:/app/.tox taskhuddler-{envname}-py37-test check,py37

[testenv]
depends = clean
setenv =
    PYTHONDONTWRITEBYTECODE=1
usedevelop = true
extras =
    pandas
deps =
    coverage>=4.2
    flake8
    flake8_docstrings
    mock
    moto
    pytest
    pytest-asyncio
    pytest-cov
    pytest-mock
    typing-extensions

passenv =
    HOME
    NO_TESTS_OVER_WIRE
    TRAVIS
    TRAVIS_JOB_ID
    TRAVIS_BRANCH

commands=
    {posargs:py.test --cov-config=tox.ini --cov-append --cov=taskhuddler --cov-report term-missing tests}

[testenv:clean]
skip_install = true
commands = coverage erase
depends =

[testenv:report]
skip_install = true
commands = coverage report -m
depends = py37
parallel_show_output = true

[testenv:check]
skip_install = true
deps =
    black
    isort
    flake8
    check-manifest
commands =
    black --check {toxinidir}
    isort --check -rc -df {toxinidir}
    flake8 {toxinidir}
    check-manifest -v {toxinidir}

[testenv:coveralls]
deps=
    python-coveralls
    coverage>=4.2
commands=
    coveralls

[flake8]
max-line-length = 160
exclude = .ropeproject,.tox,sandbox,docs,.eggs,*.egg,*.egg-info,setup.py,build/,taskhuddler/test/
show-source = True

[pytest]
norecursedirs = .tox .git .hg sandbox .eggs
python_files = test_*.py
addopts = -vv -s --color=yes

[coverage:run]
branch = true
